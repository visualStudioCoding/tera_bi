plugins {
	id 'org.springframework.boot' version '2.7.0'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

group = 'com.teraenergy'
version = '0.1.5'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-web-services'
//	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-freemarker'
	implementation group: 'org.springframework.boot', name: 'spring-boot-devtools', version: '2.7.1'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	// https://mvnrepository.com/artifact/org.mariadb.jdbc/mariadb-java-client
	implementation group: 'org.mariadb.jdbc', name: 'mariadb-java-client', version: '3.0.6'
	// runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	runtimeOnly 'mysql:mysql-connector-java'
	// https://mvnrepository.com/artifact/com.zaxxer/HikariCP
	implementation group: 'com.zaxxer', name: 'HikariCP', version: '3.4.5'
	// https://mvnrepository.com/artifact/org.mybatis.spring.boot/mybatis-spring-boot-starter
	implementation group: 'org.mybatis.spring.boot', name: 'mybatis-spring-boot-starter', version: '2.2.2'
	// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-jdbc
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-jdbc', version: '2.7.0'
	// https://mvnrepository.com/artifact/nz.net.ultraq.thymeleaf/thymeleaf-layout-dialect
	implementation group: 'nz.net.ultraq.thymeleaf', name: 'thymeleaf-layout-dialect', version: '3.1.0'

	implementation group: 'org.bgee.log4jdbc-log4j2', name:'log4jdbc-log4j2-jdbc4.1', version: '1.16'
	// https://mvnrepository.com/artifact/org.json/json
	implementation group: 'org.json', name: 'json', version: '20220320'

	// https://mvnrepository.com/artifact/com.fasterxml.jackson.dataformat/jackson-dataformat-xml
	// implementation group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-xml', version: '2.13.3'

	implementation('ch.qos.logback:logback-classic')

	// https://mvnrepository.com/artifact/com.github.ulisesbocchio/jasypt-spring-boot-starter
	implementation group: 'com.github.ulisesbocchio', name: 'jasypt-spring-boot-starter', version: '3.0.4'

	annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

	// https://mvnrepository.com/artifact/com.googlecode.json-simple/json-simple
	implementation group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'

	// https://mvnrepository.com/artifact/org.dom4j/dom4j
	implementation group: 'org.dom4j', name: 'dom4j', version: '2.1.0'

	// https://mvnrepository.com/artifact/commons-io/commons-io
	implementation group: 'commons-io', name: 'commons-io', version: '2.11.0'

	// https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
	implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'



}

// 기본 application Properties 외에 Profiles별 application-{profiles} 를 인식하기 위한 설정
sourceSets {
	main {
		resources {
			srcDirs("src/main/resources", "src/main/resources/profiles")
		}
	}
}

// 기본 application Properties 외에 application 소스가 인식 되었을 때 어떻게 처리할 것인지 처리.
// DuplicatesStrategy.INCLUDE -> 포함하여 인식
tasks {
	processResources {
		duplicatesStrategy = DuplicatesStrategy.INCLUDE
	}
}

test {
	useJUnitPlatform()
	systemProperty "jasypt.encryptor.password", System.getProperties().get("jasypt.encryptor.password")
}